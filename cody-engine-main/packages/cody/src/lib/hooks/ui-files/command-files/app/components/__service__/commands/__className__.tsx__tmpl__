import * as React from 'react';
import {useState} from "react";
import CommandButton, {WithCommandButtonProps} from '@frontend/app/components/core/CommandButton';
import CommandDialog from "@frontend/app/components/core/CommandDialog";
import {<%= propertyName %>} from "@frontend/commands/<%= serviceNames.fileName %>/use-<%= fileName %>";
import {<%= serviceNames.className %><%= className %>RuntimeInfo} from "@app/shared/commands/<%= serviceNames.fileName %>/<%= fileName %>";
<% if (!newAggregate  && !uiDisableFetchState) { %>
import {useGet<%= stateNames.className %>} from "@frontend/queries/<%= serviceNames.fileName %>/use-get-<%= stateNames.fileName %>";
import {determineQueryPayload} from "@app/shared/utils/determine-query-payload";
import {<%= serviceNames.className %>Get<%= stateNames.className %>QueryRuntimeInfo} from "@app/shared/queries/<%= serviceNames.fileName %>/get-<%= stateNames.fileName %>";
<% } %>
<% if (buttonIcon) { %>import {<%= buttonIcon %>} from "mdi-material-ui";<% } %>

interface OwnProps {
<% if (!newAggregate && !uiDisableFetchState && identifier) { %>
  <%= identifier %>: string;
<% } %>
}

type <%= className %>Props = OwnProps & WithCommandButtonProps;

const <%= className %> = (props: <%= className %>Props) => {
  const [dialogOpen, setDialogOpen] = useState(false);
<% if (!newAggregate && !uiDisableFetchState) { %>
  const query = useGet<%= stateNames.className %>(determineQueryPayload(props, <%= serviceNames.className %>Get<%= stateNames.className %>QueryRuntimeInfo));
<% } %>
  const handleOpenDialog = () => {setDialogOpen(true)};
  const handleCloseDialog = () => {setDialogOpen(false)};

  return <>
    <CommandButton command={<%= serviceNames.className %><%= className %>RuntimeInfo} onClick={handleOpenDialog} {...{<% if (buttonIcon) { %>startIcon: <<%= buttonIcon %> />, <% } %>...props.buttonProps}} />
    <CommandDialog
      open={dialogOpen}
      onClose={handleCloseDialog}
      commandDialogCommand={<%= serviceNames.className %><%= className %>RuntimeInfo}
      commandFn={<%= propertyName %>}
      <% if (!newAggregate  && !uiDisableFetchState) { %>aggregateState={query.isSuccess? query.data : {}}<% } %>
    />
  </>
};

export default <%= className %>;
